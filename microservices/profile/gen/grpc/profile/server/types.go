// Code generated by goa v3.21.1, DO NOT EDIT.
//
// profile gRPC server types
//
// Command:
// $ goa gen object-t.com/hackz-giganoto/microservices/profile/design

package server

import (
	profilepb "object-t.com/hackz-giganoto/microservices/profile/gen/grpc/profile/pb"
	profile "object-t.com/hackz-giganoto/microservices/profile/gen/profile"
)

// NewGetProfilePayload builds the payload of the "get_profile" endpoint of the
// "profile" service from the gRPC request type.
func NewGetProfilePayload(message *profilepb.GetProfileRequest, token string) *profile.GetProfilePayload {
	v := &profile.GetProfilePayload{
		UserID: message.UserId,
	}
	v.Token = token
	return v
}

// NewProtoGetProfileResponse builds the gRPC response type from the result of
// the "get_profile" endpoint of the "profile" service.
func NewProtoGetProfileResponse(result *profile.GetProfileResult) *profilepb.GetProfileResponse {
	message := &profilepb.GetProfileResponse{
		UserId: result.UserID,
		Name:   result.Name,
	}
	return message
}

// NewUpdateProfilePayload builds the payload of the "update_profile" endpoint
// of the "profile" service from the gRPC request type.
func NewUpdateProfilePayload(message *profilepb.UpdateProfileRequest, token *string) *profile.UpdateProfilePayload {
	v := &profile.UpdateProfilePayload{
		Name: message.Name,
	}
	v.Token = token
	return v
}

// NewProtoUpdateProfileResponse builds the gRPC response type from the result
// of the "update_profile" endpoint of the "profile" service.
func NewProtoUpdateProfileResponse(result *profile.UpdateProfileResult) *profilepb.UpdateProfileResponse {
	message := &profilepb.UpdateProfileResponse{
		UserId: result.UserID,
		Name:   result.Name,
	}
	return message
}
