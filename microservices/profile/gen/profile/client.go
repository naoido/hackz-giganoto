// Code generated by goa v3.21.1, DO NOT EDIT.
//
// profile client
//
// Command:
// $ goa gen object-t.com/hackz-giganoto/microservices/profile/design

package profile

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "profile" service client.
type Client struct {
	CreateEndpoint goa.Endpoint
	GetEndpoint    goa.Endpoint
}

// NewClient initializes a "profile" service client given the endpoints.
func NewClient(create, get goa.Endpoint) *Client {
	return &Client{
		CreateEndpoint: create,
		GetEndpoint:    get,
	}
}

// Create calls the "create" endpoint of the "profile" service.
func (c *Client) Create(ctx context.Context, p *ProfilePayload) (res *GoaExampleProfile, err error) {
	var ires any
	ires, err = c.CreateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GoaExampleProfile), nil
}

// Get calls the "get" endpoint of the "profile" service.
func (c *Client) Get(ctx context.Context, p *GetPayload) (res *GoaExampleProfile, err error) {
	var ires any
	ires, err = c.GetEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GoaExampleProfile), nil
}
