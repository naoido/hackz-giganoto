// Code generated by goa v3.21.1, DO NOT EDIT.
//
// profile service
//
// Command:
// $ goa gen object-t.com/hackz-giganoto/microservices/profile/design

package profile

import (
	"context"

	"goa.design/goa/v3/security"
)

// User profile management service
type Service interface {
	// Get user profile
	GetProfile(context.Context, *GetProfilePayload) (res *GetProfileResult, err error)
	// Update user profile
	UpdateProfile(context.Context, *UpdateProfilePayload) (res *UpdateProfileResult, err error)
}

// Auther defines the authorization functions to be implemented by the service.
type Auther interface {
	// JWTAuth implements the authorization logic for the JWT security scheme.
	JWTAuth(ctx context.Context, token string, schema *security.JWTScheme) (context.Context, error)
}

// APIName is the name of the API as defined in the design.
const APIName = "profile"

// APIVersion is the version of the API as defined in the design.
const APIVersion = "1.0"

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "profile"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [2]string{"get_profile", "update_profile"}

// GetProfilePayload is the payload type of the profile service get_profile
// method.
type GetProfilePayload struct {
	// JWT token
	Token string
	// The user_id of the user
	UserID string
}

// GetProfileResult is the result type of the profile service get_profile
// method.
type GetProfileResult struct {
	// User ID
	UserID string
	// User name
	Name string
}

// UpdateProfilePayload is the payload type of the profile service
// update_profile method.
type UpdateProfilePayload struct {
	// JWT token
	Token *string
	// User name
	Name string
}

// UpdateProfileResult is the result type of the profile service update_profile
// method.
type UpdateProfileResult struct {
	// User ID
	UserID string
	// User name
	Name string
}

// Invalid request
type BadRequest string

// Internal server error
type InternalError string

// Profile not found
type NotFound string

// Unauthorized access
type Unauthorized string

// Error returns an error description.
func (e BadRequest) Error() string {
	return "Invalid request"
}

// ErrorName returns "bad_request".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e BadRequest) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "bad_request".
func (e BadRequest) GoaErrorName() string {
	return "bad_request"
}

// Error returns an error description.
func (e InternalError) Error() string {
	return "Internal server error"
}

// ErrorName returns "internal_error".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e InternalError) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "internal_error".
func (e InternalError) GoaErrorName() string {
	return "internal_error"
}

// Error returns an error description.
func (e NotFound) Error() string {
	return "Profile not found"
}

// ErrorName returns "not_found".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e NotFound) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "not_found".
func (e NotFound) GoaErrorName() string {
	return "not_found"
}

// Error returns an error description.
func (e Unauthorized) Error() string {
	return "Unauthorized access"
}

// ErrorName returns "unauthorized".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e Unauthorized) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "unauthorized".
func (e Unauthorized) GoaErrorName() string {
	return "unauthorized"
}
