// Code generated by goa v3.21.1, DO NOT EDIT.
//
// profile HTTP client CLI support package
//
// Command:
// $ goa gen object-t.com/hackz-giganoto/microservices/profile/design

package client

import (
	"encoding/json"
	"fmt"

	profile "object-t.com/hackz-giganoto/microservices/profile/gen/profile"
)

// BuildCreatePayload builds the payload for the profile create endpoint from
// CLI flags.
func BuildCreatePayload(profileCreateBody string) (*profile.ProfilePayload, error) {
	var err error
	var body CreateRequestBody
	{
		err = json.Unmarshal([]byte(profileCreateBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"username\": \"Veniam eveniet inventore placeat quibusdam rerum.\"\n   }'")
		}
	}
	v := &profile.ProfilePayload{
		Username: body.Username,
	}

	return v, nil
}

// BuildGetPayload builds the payload for the profile get endpoint from CLI
// flags.
func BuildGetPayload(profileGetID string) (*profile.GetPayload, error) {
	var id string
	{
		id = profileGetID
	}
	v := &profile.GetPayload{}
	v.ID = id

	return v, nil
}
