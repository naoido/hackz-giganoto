// Code generated by goa v3.21.1, DO NOT EDIT.
//
// chat client
//
// Command:
// $ goa gen object-t.com/hackz-giganoto/microservices/chat/design

package chat

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "chat" service client.
type Client struct {
	SendMessageEndpoint    goa.Endpoint
	JoinChatEndpoint       goa.Endpoint
	GetChatHistoryEndpoint goa.Endpoint
}

// NewClient initializes a "chat" service client given the endpoints.
func NewClient(sendMessage, joinChat, getChatHistory goa.Endpoint) *Client {
	return &Client{
		SendMessageEndpoint:    sendMessage,
		JoinChatEndpoint:       joinChat,
		GetChatHistoryEndpoint: getChatHistory,
	}
}

// SendMessage calls the "send_message" endpoint of the "chat" service.
// SendMessage may return the following errors:
//   - "unauthorized" (type Unauthorized)
//   - "bad_request" (type BadRequest)
//   - "internal_error" (type InternalError)
//   - error: internal error
func (c *Client) SendMessage(ctx context.Context, p *SendMessagePayload) (res *SendMessageResult, err error) {
	var ires any
	ires, err = c.SendMessageEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SendMessageResult), nil
}

// JoinChat calls the "join_chat" endpoint of the "chat" service.
// JoinChat may return the following errors:
//   - "unauthorized" (type Unauthorized)
//   - "bad_request" (type BadRequest)
//   - "internal_error" (type InternalError)
//   - error: internal error
func (c *Client) JoinChat(ctx context.Context, p *JoinChatPayload) (res JoinChatClientStream, err error) {
	var ires any
	ires, err = c.JoinChatEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(JoinChatClientStream), nil
}

// GetChatHistory calls the "get_chat_history" endpoint of the "chat" service.
// GetChatHistory may return the following errors:
//   - "unauthorized" (type Unauthorized)
//   - "bad_request" (type BadRequest)
//   - "not_found" (type NotFound)
//   - "internal_error" (type InternalError)
//   - error: internal error
func (c *Client) GetChatHistory(ctx context.Context, p *GetChatHistoryPayload) (res *GetChatHistoryResult, err error) {
	var ires any
	ires, err = c.GetChatHistoryEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetChatHistoryResult), nil
}
