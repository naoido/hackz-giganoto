// Code generated by goa v3.21.1, DO NOT EDIT.
//
// profile gRPC client types
//
// Command:
// $ goa gen object-t.com/hackz-giganoto/microservices/chat/design

package client

import (
	profilepb "object-t.com/hackz-giganoto/microservices/chat/gen/grpc/profile/pb"
	profile "object-t.com/hackz-giganoto/microservices/chat/gen/profile"
)

// NewProtoGetProfileRequest builds the gRPC request type from the payload of
// the "get_profile" endpoint of the "profile" service.
func NewProtoGetProfileRequest() *profilepb.GetProfileRequest {
	message := &profilepb.GetProfileRequest{}
	return message
}

// NewGetProfileResult builds the result type of the "get_profile" endpoint of
// the "profile" service from the gRPC response type.
func NewGetProfileResult(message *profilepb.GetProfileResponse) *profile.GetProfileResult {
	result := &profile.GetProfileResult{
		UserID:    message.UserId,
		Name:      message.Name,
		CreatedAt: message.CreatedAt,
		UpdatedAt: message.UpdatedAt,
	}
	return result
}

// NewProtoUpdateProfileRequest builds the gRPC request type from the payload
// of the "update_profile" endpoint of the "profile" service.
func NewProtoUpdateProfileRequest(payload *profile.UpdateProfilePayload) *profilepb.UpdateProfileRequest {
	message := &profilepb.UpdateProfileRequest{
		Name: payload.Name,
	}
	return message
}

// NewUpdateProfileResult builds the result type of the "update_profile"
// endpoint of the "profile" service from the gRPC response type.
func NewUpdateProfileResult(message *profilepb.UpdateProfileResponse) *profile.UpdateProfileResult {
	result := &profile.UpdateProfileResult{
		UserID:    message.UserId,
		Name:      message.Name,
		CreatedAt: message.CreatedAt,
		UpdatedAt: message.UpdatedAt,
	}
	return result
}

// NewProtoGetProfileByIDRequest builds the gRPC request type from the payload
// of the "get_profile_by_id" endpoint of the "profile" service.
func NewProtoGetProfileByIDRequest(payload *profile.GetProfileByIDPayload) *profilepb.GetProfileByIDRequest {
	message := &profilepb.GetProfileByIDRequest{
		UserId: payload.UserID,
	}
	return message
}

// NewGetProfileByIDResult builds the result type of the "get_profile_by_id"
// endpoint of the "profile" service from the gRPC response type.
func NewGetProfileByIDResult(message *profilepb.GetProfileByIDResponse) *profile.GetProfileByIDResult {
	result := &profile.GetProfileByIDResult{
		UserID:            message.UserId,
		Name:              message.Name,
		CreationTimestamp: message.CreationTimestamp,
		UpdatedAt:         message.UpdatedAt,
	}
	return result
}
