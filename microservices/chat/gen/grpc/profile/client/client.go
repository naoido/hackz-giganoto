// Code generated by goa v3.21.1, DO NOT EDIT.
//
// profile gRPC client
//
// Command:
// $ goa gen object-t.com/hackz-giganoto/microservices/chat/design

package client

import (
	"context"

	goagrpc "goa.design/goa/v3/grpc"
	goapb "goa.design/goa/v3/grpc/pb"
	goa "goa.design/goa/v3/pkg"
	"google.golang.org/grpc"
	profilepb "object-t.com/hackz-giganoto/microservices/chat/gen/grpc/profile/pb"
)

// Client lists the service endpoint gRPC clients.
type Client struct {
	grpccli profilepb.ProfileClient
	opts    []grpc.CallOption
}

// NewClient instantiates gRPC client for all the profile service servers.
func NewClient(cc *grpc.ClientConn, opts ...grpc.CallOption) *Client {
	return &Client{
		grpccli: profilepb.NewProfileClient(cc),
		opts:    opts,
	}
}

// GetProfile calls the "GetProfile" function in profilepb.ProfileClient
// interface.
func (c *Client) GetProfile() goa.Endpoint {
	return func(ctx context.Context, v any) (any, error) {
		inv := goagrpc.NewInvoker(
			BuildGetProfileFunc(c.grpccli, c.opts...),
			EncodeGetProfileRequest,
			DecodeGetProfileResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault("%s", err.Error())
			}
		}
		return res, nil
	}
}

// UpdateProfile calls the "UpdateProfile" function in profilepb.ProfileClient
// interface.
func (c *Client) UpdateProfile() goa.Endpoint {
	return func(ctx context.Context, v any) (any, error) {
		inv := goagrpc.NewInvoker(
			BuildUpdateProfileFunc(c.grpccli, c.opts...),
			EncodeUpdateProfileRequest,
			DecodeUpdateProfileResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault("%s", err.Error())
			}
		}
		return res, nil
	}
}

// GetProfileByID calls the "GetProfileByID" function in
// profilepb.ProfileClient interface.
func (c *Client) GetProfileByID() goa.Endpoint {
	return func(ctx context.Context, v any) (any, error) {
		inv := goagrpc.NewInvoker(
			BuildGetProfileByIDFunc(c.grpccli, c.opts...),
			EncodeGetProfileByIDRequest,
			DecodeGetProfileByIDResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault("%s", err.Error())
			}
		}
		return res, nil
	}
}
