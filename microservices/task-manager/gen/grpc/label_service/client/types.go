// Code generated by goa v3.21.1, DO NOT EDIT.
//
// LabelService gRPC client types
//
// Command:
// $ goa gen object-t.com/hackz-giganoto/microservices/task-manager/design

package client

import (
	label_servicepb "object-t.com/hackz-giganoto/microservices/task-manager/gen/grpc/label_service/pb"
	labelservice "object-t.com/hackz-giganoto/microservices/task-manager/gen/label_service"
	labelserviceviews "object-t.com/hackz-giganoto/microservices/task-manager/gen/label_service/views"
)

// NewProtoListRequest builds the gRPC request type from the payload of the
// "List" endpoint of the "LabelService" service.
func NewProtoListRequest() *label_servicepb.ListRequest {
	message := &label_servicepb.ListRequest{}
	return message
}

// NewListResult builds the result type of the "List" endpoint of the
// "LabelService" service from the gRPC response type.
func NewListResult(message *label_servicepb.LabelCollection) labelserviceviews.LabelCollectionView {
	result := make([]*labelserviceviews.LabelView, len(message.Field))
	for i, val := range message.Field {
		result[i] = &labelserviceviews.LabelView{
			ID:    &val.Id,
			Name:  &val.Name,
			Color: &val.Color,
		}
	}
	return result
}

// NewProtoGetRequest builds the gRPC request type from the payload of the
// "Get" endpoint of the "LabelService" service.
func NewProtoGetRequest(payload *labelservice.GetPayload) *label_servicepb.GetRequest {
	message := &label_servicepb.GetRequest{
		Id: payload.ID,
	}
	return message
}

// NewGetResult builds the result type of the "Get" endpoint of the
// "LabelService" service from the gRPC response type.
func NewGetResult(message *label_servicepb.GetResponse) *labelserviceviews.LabelView {
	result := &labelserviceviews.LabelView{
		ID:    &message.Id,
		Name:  &message.Name,
		Color: &message.Color,
	}
	return result
}

// NewProtoCreateRequest builds the gRPC request type from the payload of the
// "Create" endpoint of the "LabelService" service.
func NewProtoCreateRequest(payload *labelservice.CreatePayload) *label_servicepb.CreateRequest {
	message := &label_servicepb.CreateRequest{
		Name:  payload.Name,
		Color: payload.Color,
	}
	return message
}

// NewCreateResult builds the result type of the "Create" endpoint of the
// "LabelService" service from the gRPC response type.
func NewCreateResult(message *label_servicepb.CreateResponse) *labelserviceviews.LabelView {
	result := &labelserviceviews.LabelView{
		ID:    &message.Id,
		Name:  &message.Name,
		Color: &message.Color,
	}
	return result
}

// NewProtoUpdateRequest builds the gRPC request type from the payload of the
// "Update" endpoint of the "LabelService" service.
func NewProtoUpdateRequest(payload *labelservice.UpdatePayload) *label_servicepb.UpdateRequest {
	message := &label_servicepb.UpdateRequest{
		Id:    payload.ID,
		Name:  payload.Name,
		Color: payload.Color,
	}
	return message
}

// NewUpdateResult builds the result type of the "Update" endpoint of the
// "LabelService" service from the gRPC response type.
func NewUpdateResult(message *label_servicepb.UpdateResponse) *labelserviceviews.LabelView {
	result := &labelserviceviews.LabelView{
		ID:    &message.Id,
		Name:  &message.Name,
		Color: &message.Color,
	}
	return result
}

// NewProtoDeleteRequest builds the gRPC request type from the payload of the
// "Delete" endpoint of the "LabelService" service.
func NewProtoDeleteRequest(payload *labelservice.DeletePayload) *label_servicepb.DeleteRequest {
	message := &label_servicepb.DeleteRequest{
		Id: payload.ID,
	}
	return message
}
