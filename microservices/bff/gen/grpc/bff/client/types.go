// Code generated by goa v3.21.1, DO NOT EDIT.
//
// bff gRPC client types
//
// Command:
// $ goa gen object-t.com/hackz-giganoto/microservices/bff/design

package client

import (
	bff "object-t.com/hackz-giganoto/microservices/bff/gen/bff"
	bffpb "object-t.com/hackz-giganoto/microservices/bff/gen/grpc/bff/pb"
)

// NewProtoCreateRoomRequest builds the gRPC request type from the payload of
// the "create_room" endpoint of the "bff" service.
func NewProtoCreateRoomRequest() *bffpb.CreateRoomRequest {
	message := &bffpb.CreateRoomRequest{}
	return message
}

// NewCreateRoomResult builds the result type of the "create_room" endpoint of
// the "bff" service from the gRPC response type.
func NewCreateRoomResult(message *bffpb.CreateRoomResponse) string {
	result := message.Field
	return result
}

// NewProtoHistoryRequest builds the gRPC request type from the payload of the
// "history" endpoint of the "bff" service.
func NewProtoHistoryRequest(payload *bff.HistoryPayload) *bffpb.HistoryRequest {
	message := &bffpb.HistoryRequest{
		RoomId: payload.RoomID,
	}
	return message
}

// NewHistoryResult builds the result type of the "history" endpoint of the
// "bff" service from the gRPC response type.
func NewHistoryResult(message *bffpb.HistoryResponse) []*bff.EnrichedMessage {
	result := make([]*bff.EnrichedMessage, len(message.Field))
	for i, val := range message.Field {
		result[i] = &bff.EnrichedMessage{
			MessageID: val.MessageId,
			RoomID:    val.RoomId,
			UserID:    val.UserId,
			Message:   val.Message_,
			CreatedAt: val.CreatedAt,
			UpdatedAt: val.UpdatedAt,
		}
	}
	return result
}

// NewProtoRoomListRequest builds the gRPC request type from the payload of the
// "room-list" endpoint of the "bff" service.
func NewProtoRoomListRequest() *bffpb.RoomListRequest {
	message := &bffpb.RoomListRequest{}
	return message
}

// NewRoomListResult builds the result type of the "room-list" endpoint of the
// "bff" service from the gRPC response type.
func NewRoomListResult(message *bffpb.RoomListResponse) []string {
	result := make([]string, len(message.Field))
	for i, val := range message.Field {
		result[i] = val
	}
	return result
}

// NewProtoJoinRoomRequest builds the gRPC request type from the payload of the
// "join-room" endpoint of the "bff" service.
func NewProtoJoinRoomRequest(payload *bff.JoinRoomPayload) *bffpb.JoinRoomRequest {
	message := &bffpb.JoinRoomRequest{
		InviteKey: payload.InviteKey,
	}
	return message
}

// NewJoinRoomResult builds the result type of the "join-room" endpoint of the
// "bff" service from the gRPC response type.
func NewJoinRoomResult(message *bffpb.JoinRoomResponse) string {
	result := message.Field
	return result
}

// NewProtoInviteRoomRequest builds the gRPC request type from the payload of
// the "invite-room" endpoint of the "bff" service.
func NewProtoInviteRoomRequest(payload *bff.InviteRoomPayload) *bffpb.InviteRoomRequest {
	message := &bffpb.InviteRoomRequest{
		RoomId: payload.RoomID,
		UserId: payload.UserID,
	}
	return message
}

// NewInviteRoomResult builds the result type of the "invite-room" endpoint of
// the "bff" service from the gRPC response type.
func NewInviteRoomResult(message *bffpb.InviteRoomResponse) string {
	result := message.Field
	return result
}

func NewStreamChatResponseEnrichedMessage(v *bffpb.StreamChatResponse) *bff.EnrichedMessage {
	result := &bff.EnrichedMessage{
		MessageID: v.MessageId,
		RoomID:    v.RoomId,
		UserID:    v.UserId,
		Message:   v.Message_,
		CreatedAt: v.CreatedAt,
		UpdatedAt: v.UpdatedAt,
	}
	return result
}

func NewProtoStreamChatStreamingRequest(spayload string) *bffpb.StreamChatStreamingRequest {
	v := &bffpb.StreamChatStreamingRequest{}
	v.Field = spayload
	return v
}

// NewProtoGetProfileRequest builds the gRPC request type from the payload of
// the "get_profile" endpoint of the "bff" service.
func NewProtoGetProfileRequest() *bffpb.GetProfileRequest {
	message := &bffpb.GetProfileRequest{}
	return message
}

// NewGetProfileResult builds the result type of the "get_profile" endpoint of
// the "bff" service from the gRPC response type.
func NewGetProfileResult(message *bffpb.GetProfileResponse) *bff.GetProfileResult {
	result := &bff.GetProfileResult{
		UserID:    message.UserId,
		Name:      message.Name,
		CreatedAt: message.CreatedAt,
		UpdatedAt: message.UpdatedAt,
	}
	return result
}

// NewProtoUpdateProfileRequest builds the gRPC request type from the payload
// of the "update_profile" endpoint of the "bff" service.
func NewProtoUpdateProfileRequest(payload *bff.UpdateProfilePayload) *bffpb.UpdateProfileRequest {
	message := &bffpb.UpdateProfileRequest{
		Name: payload.Name,
	}
	return message
}

// NewUpdateProfileResult builds the result type of the "update_profile"
// endpoint of the "bff" service from the gRPC response type.
func NewUpdateProfileResult(message *bffpb.UpdateProfileResponse) *bff.UpdateProfileResult {
	result := &bff.UpdateProfileResult{
		UserID:    message.UserId,
		Name:      message.Name,
		CreatedAt: message.CreatedAt,
		UpdatedAt: message.UpdatedAt,
	}
	return result
}
