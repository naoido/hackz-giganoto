// Code generated by goa v3.21.1, DO NOT EDIT.
//
// auth endpoints
//
// Command:
// $ goa gen object-t.com/hackz-giganoto/microservices/auth/design

package auth

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "auth" service endpoints.
type Endpoints struct {
	Introspect    goa.Endpoint
	AuthURL       goa.Endpoint
	OauthCallback goa.Endpoint
}

// NewEndpoints wraps the methods of the "auth" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Introspect:    NewIntrospectEndpoint(s),
		AuthURL:       NewAuthURLEndpoint(s),
		OauthCallback: NewOauthCallbackEndpoint(s),
	}
}

// Use applies the given middleware to all the "auth" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Introspect = m(e.Introspect)
	e.AuthURL = m(e.AuthURL)
	e.OauthCallback = m(e.OauthCallback)
}

// NewIntrospectEndpoint returns an endpoint function that calls the method
// "introspect" of service "auth".
func NewIntrospectEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*IntrospectPayload)
		return s.Introspect(ctx, p)
	}
}

// NewAuthURLEndpoint returns an endpoint function that calls the method
// "auth_url" of service "auth".
func NewAuthURLEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		return s.AuthURL(ctx)
	}
}

// NewOauthCallbackEndpoint returns an endpoint function that calls the method
// "oauth_callback" of service "auth".
func NewOauthCallbackEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*OauthCallbackPayload)
		return s.OauthCallback(ctx, p)
	}
}
