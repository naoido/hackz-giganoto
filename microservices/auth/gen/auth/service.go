// Code generated by goa v3.21.1, DO NOT EDIT.
//
// auth service
//
// Command:
// $ goa gen object-t.com/hackz-giganoto/microservices/auth/design

package auth

import (
	"context"
)

// Authentication service that converts opaque tokens to internal JWT tokens
// for Kong Gateway
type Service interface {
	// Introspect opaque token and return internal JWT token for Kong Gateway
	Introspect(context.Context, *IntrospectPayload) (res *IntrospectResult, err error)
	// Get GitHub OAuth authorization URL with state parameter
	AuthURL(context.Context) (res *AuthURLResult, err error)
	// Handle GitHub OAuth callback and return opaque token
	OauthCallback(context.Context, *OauthCallbackPayload) (res *OauthCallbackResult, err error)
}

// APIName is the name of the API as defined in the design.
const APIName = "auth"

// APIVersion is the version of the API as defined in the design.
const APIVersion = "0.0.1"

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "auth"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [3]string{"introspect", "auth_url", "oauth_callback"}

// AuthURLResult is the result type of the auth service auth_url method.
type AuthURLResult struct {
	// GitHub OAuth authorization URL
	AuthURL string
	// OAuth state parameter for CSRF protection
	State string
}

// IntrospectPayload is the payload type of the auth service introspect method.
type IntrospectPayload struct {
	// Opaque token to introspect
	Token string
}

// IntrospectResult is the result type of the auth service introspect method.
type IntrospectResult struct {
	// Internal JWT token for downstream services
	JWT string
	// Whether the token is active
	Active bool
	// Token expiration timestamp
	Exp *int64
	// Token scopes
	Scopes []string
}

// OauthCallbackPayload is the payload type of the auth service oauth_callback
// method.
type OauthCallbackPayload struct {
	// Authorization code from GitHub
	Code string
	// OAuth state parameter for validation
	State string
}

// OauthCallbackResult is the result type of the auth service oauth_callback
// method.
type OauthCallbackResult struct {
	// Opaque access token
	AccessToken string
	// Token type (Bearer)
	TokenType string
	// Token expiration in seconds
	ExpiresIn int64
	// GitHub user ID
	UserID string
}

// GitHub API error
type GithubError string

// Internal server error
type InternalError string

// Invalid authorization code
type InvalidCode string

// Invalid or expired state parameter
type InvalidState string

// Token is invalid or expired
type InvalidToken string

// Error returns an error description.
func (e GithubError) Error() string {
	return "GitHub API error"
}

// ErrorName returns "github_error".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e GithubError) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "github_error".
func (e GithubError) GoaErrorName() string {
	return "github_error"
}

// Error returns an error description.
func (e InternalError) Error() string {
	return "Internal server error"
}

// ErrorName returns "internal_error".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e InternalError) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "internal_error".
func (e InternalError) GoaErrorName() string {
	return "internal_error"
}

// Error returns an error description.
func (e InvalidCode) Error() string {
	return "Invalid authorization code"
}

// ErrorName returns "invalid_code".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e InvalidCode) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "invalid_code".
func (e InvalidCode) GoaErrorName() string {
	return "invalid_code"
}

// Error returns an error description.
func (e InvalidState) Error() string {
	return "Invalid or expired state parameter"
}

// ErrorName returns "invalid_state".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e InvalidState) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "invalid_state".
func (e InvalidState) GoaErrorName() string {
	return "invalid_state"
}

// Error returns an error description.
func (e InvalidToken) Error() string {
	return "Token is invalid or expired"
}

// ErrorName returns "invalid_token".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e InvalidToken) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "invalid_token".
func (e InvalidToken) GoaErrorName() string {
	return "invalid_token"
}
